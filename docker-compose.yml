version: '3.8'

services:
    db:
        image: postgres:15-alpine
        environment:
            - POSTGRES_DB=muabantainguyen
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=123
            - POSTGRES_HOST_AUTH_METHOD=md5
        command: ['postgres', '-c', 'listen_addresses=*', '-c', 'max_connections=200']
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - '5432:5432'
        restart: unless-stopped
        networks:
            - app-network

    app:
        build: .
        ports:
            - '4000:4000'
        environment:
            - PGHOST=db
            - PGPORT=5432
            - PGDATABASE=muabantainguyen
            - PGUSER=postgres
            - PGPASSWORD=123
            - NODE_ENV=production
            - PORT=4000
        volumes:
            - ./uploads:/app/uploads
        restart: unless-stopped
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        depends_on:
            - db
        networks:
            - app-network

    nginx:
        image: nginx:alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx-ssl.conf:/etc/nginx/nginx.conf:ro
            - ./ssl:/etc/nginx/ssl:ro
        depends_on:
            - app
        restart: unless-stopped
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    pgdata:
